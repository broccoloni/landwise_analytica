"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web-worker";
exports.ids = ["vendor-chunks/web-worker"];
exports.modules = {

/***/ "(ssr)/./node_modules/web-worker/node.js":
/*!*****************************************!*\
  !*** ./node_modules/web-worker/node.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vm */ \"vm\");\n/* harmony import */ var vm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vm__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var worker_threads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! worker_threads */ \"worker_threads\");\n/* harmony import */ var worker_threads__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(worker_threads__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nconst WORKER = Symbol.for('worker');\nconst EVENTS = Symbol.for('events');\n\nclass EventTarget {\n\tconstructor() {\n\t\tObject.defineProperty(this, EVENTS, {\n\t\t\tvalue: new Map()\n\t\t});\n\t}\n\tdispatchEvent(event) {\n\t\tevent.target = event.currentTarget = this;\n\t\tif (this['on'+event.type]) {\n\t\t\ttry {\n\t\t\t\tthis['on'+event.type](event);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t}\n\t\tconst list = this[EVENTS].get(event.type);\n\t\tif (list == null) return;\n\t\tlist.forEach(handler => {\n\t\t\ttry {\n\t\t\t\thandler.call(this, event);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t});\n\t}\n\taddEventListener(type, fn) {\n\t\tlet events = this[EVENTS].get(type);\n\t\tif (!events) this[EVENTS].set(type, events = []);\n\t\tevents.push(fn);\n\t}\n\tremoveEventListener(type, fn) {\n\t\tlet events = this[EVENTS].get(type);\n\t\tif (events) {\n\t\t\tconst index = events.indexOf(fn);\n\t\t\tif (index !== -1) events.splice(index, 1);\n\t\t}\n\t}\n}\n\nfunction Event(type, target) {\n\tthis.type = type;\n\tthis.timeStamp = Date.now();\n\tthis.target = this.currentTarget = this.data = null;\n}\n\n// this module is used self-referentially on both sides of the\n// thread boundary, but behaves differently in each context.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((worker_threads__WEBPACK_IMPORTED_MODULE_2___default().isMainThread) ? mainThread() : workerThread());\n\nconst baseUrl = url__WEBPACK_IMPORTED_MODULE_0___default().pathToFileURL(process.cwd() + '/');\n\nfunction mainThread() {\n\n\t/**\n\t * A web-compatible Worker implementation atop Node's worker_threads.\n\t *  - uses DOM-style events (Event.data, Event.type, etc)\n\t *  - supports event handler properties (worker.onmessage)\n\t *  - Worker() constructor accepts a module URL\n\t *  - accepts the {type:'module'} option\n\t *  - emulates WorkerGlobalScope within the worker\n\t * @param {string} url  The URL or module specifier to load\n\t * @param {object} [options]  Worker construction options\n\t * @param {string} [options.name]  Available as `self.name` within the Worker\n\t * @param {string} [options.type=\"classic\"]  Pass \"module\" to create a Module Worker.\n\t */\n\tclass Worker extends EventTarget {\n\t\tconstructor(url, options) {\n\t\t\tsuper();\n\t\t\tconst { name, type } = options || {};\n\t\t\turl += '';\n\t\t\tlet mod;\n\t\t\tif (/^data:/.test(url)) {\n\t\t\t\tmod = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmod = url__WEBPACK_IMPORTED_MODULE_0___default().fileURLToPath(new (url__WEBPACK_IMPORTED_MODULE_0___default().URL)(url, baseUrl));\n\t\t\t}\n\t\t\tconst worker = new (worker_threads__WEBPACK_IMPORTED_MODULE_2___default().Worker)(\n\t\t\t\t__filename,\n\t\t\t\t{ workerData: { mod, name, type } }\n\t\t\t);\n\t\t\tObject.defineProperty(this, WORKER, {\n\t\t\t\tvalue: worker\n\t\t\t});\n\t\t\tworker.on('message', data => {\n\t\t\t\tconst event = new Event('message');\n\t\t\t\tevent.data = data;\n\t\t\t\tthis.dispatchEvent(event);\n\t\t\t});\n\t\t\tworker.on('error', error => {\n\t\t\t\terror.type = 'error';\n\t\t\t\tthis.dispatchEvent(error);\n\t\t\t});\n\t\t\tworker.on('exit', () => {\n\t\t\t\tthis.dispatchEvent(new Event('close'));\n\t\t\t});\n\t\t}\n\t\tpostMessage(data, transferList) {\n\t\t\tthis[WORKER].postMessage(data, transferList);\n\t\t}\n\t\tterminate() {\n\t\t\tthis[WORKER].terminate();\n\t\t}\n\t}\n\tWorker.prototype.onmessage = Worker.prototype.onerror = Worker.prototype.onclose = null;\n\treturn Worker;\n}\n\nfunction workerThread() {\n\tlet { mod, name, type } = (worker_threads__WEBPACK_IMPORTED_MODULE_2___default().workerData);\n\tif (!mod) return mainThread();\n\n\t// turn global into a mock WorkerGlobalScope\n\tconst self = global.self = global;\n\n\t// enqueue messages to dispatch after modules are loaded\n\tlet q = [];\n\tfunction flush() {\n\t\tconst buffered = q;\n\t\tq = null;\n\t\tbuffered.forEach(event => { self.dispatchEvent(event); });\n\t}\n\tworker_threads__WEBPACK_IMPORTED_MODULE_2___default().parentPort.on('message', data => {\n\t\tconst event = new Event('message');\n\t\tevent.data = data;\n\t\tif (q == null) self.dispatchEvent(event);\n\t\telse q.push(event);\n\t});\n\tworker_threads__WEBPACK_IMPORTED_MODULE_2___default().parentPort.on('error', err => {\n\t\terr.type = 'Error';\n\t\tself.dispatchEvent(err);\n\t});\n\n\tclass WorkerGlobalScope extends EventTarget {\n\t\tpostMessage(data, transferList) {\n\t\t\tworker_threads__WEBPACK_IMPORTED_MODULE_2___default().parentPort.postMessage(data, transferList);\n\t\t}\n\t\t// Emulates https://developer.mozilla.org/en-US/docs/Web/API/DedicatedWorkerGlobalScope/close\n\t\tclose() {\n\t\t\tprocess.exit();\n\t\t}\n\t}\n\tlet proto = Object.getPrototypeOf(global);\n\tdelete proto.constructor;\n\tObject.defineProperties(WorkerGlobalScope.prototype, proto);\n\tproto = Object.setPrototypeOf(global, new WorkerGlobalScope());\n\t['postMessage', 'addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(fn => {\n\t\tproto[fn] = proto[fn].bind(global);\n\t});\n\tglobal.name = name;\n\n\tconst isDataUrl = /^data:/.test(mod);\n\tif (type === 'module') {\n\t\t__webpack_require__(\"(ssr)/./node_modules/web-worker lazy recursive\")(mod)\n\t\t\t.catch(err => {\n\t\t\t\tif (isDataUrl && err.message === 'Not supported') {\n\t\t\t\t\tconsole.warn('Worker(): Importing data: URLs requires Node 12.10+. Falling back to classic worker.');\n\t\t\t\t\treturn evaluateDataUrl(mod, name);\n\t\t\t\t}\n\t\t\t\tconsole.error(err);\n\t\t\t})\n\t\t\t.then(flush);\n\t}\n\telse {\n\t\ttry {\n\t\t\tif (/^data:/.test(mod)) {\n\t\t\t\tevaluateDataUrl(mod, name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t__webpack_require__(\"(ssr)/./node_modules/web-worker sync recursive\")(mod);\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tPromise.resolve().then(flush);\n\t}\n}\n\nfunction evaluateDataUrl(url, name) {\n\tconst { data } = parseDataUrl(url);\n\treturn vm__WEBPACK_IMPORTED_MODULE_1___default().runInThisContext(data, {\n\t\tfilename: 'worker.<'+(name || 'data:')+'>'\n\t});\n}\n\nfunction parseDataUrl(url) {\n\tlet [m, type, encoding, data] = url.match(/^data: *([^;,]*)(?: *; *([^,]*))? *,(.*)$/) || [];\n\tif (!m) throw Error('Invalid Data URL.');\n\tif (encoding) switch (encoding.toLowerCase()) {\n\t\tcase 'base64':\n\t\t\tdata = Buffer.from(data, 'base64').toString();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow Error('Unknown Data URL encoding \"' + encoding + '\"');\n\t}\n\treturn { type, data };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web-worker/node.js\n");

/***/ })

};
;